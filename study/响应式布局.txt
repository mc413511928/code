响应式布局
1响应式原理：
	1通过媒体查询针对不同宽度进行布局和样式的设置，从而适配不同设备的目的，
	
布局容器
	1响应式需要一个父级做为布局容器，来配合子级元素来实现变化效果。

	原理就是在不同屏幕下，通过媒体查询来改变这个布局容器的大小，再改变里面子元素的排列方式和大小，从而实现不同屏幕下，看到不同的页面布局和样式变化。
	
	父容器的尺寸划分：
			- 超小屏幕（手机，小于 768px）：设置宽度为 100%
	- 小屏幕（平板，大于等于 768px）：设置宽度为 750px
-	 中等屏幕（桌面显示器，大于等于 992px）：宽度设置为 970px
	- 大屏幕（大桌面显示器，大于等于 1200px）：宽度设置为 1170px 
	容器的宽度是固定定死的，
	
	总结：响应式开发，首先我们需要一个容器，
2，bootstrap:
	书写内容 :

	直接拿Bootstrap 预先定义好的样式来使用

	修改Bootstrap 原来的样式，注意权重问题

	学好Bootstrap 的关键在于知道它定义了哪些样式，以及这些样式能实现什么样的效果
	2.container

	- 响应式布局的容器  固定宽度
	3.container-fluid

	- 流式布局容器 百分百宽度
-	 占据全部视口（viewport）的容器。

	如果孩子 的分数相加等于12则沾满整个容器，和容器一样宽，
	如果孩子的分数相加小于12则占不满整个容器，有空白，
	如果孩子的份数相加大于12则多余的那一列会另起一行
	- xs-extra small：超小； sm-small：小；  md-medium：中等； lg-large：大；
	- 列（column）大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列
	- 每一列默认有左右15像素的 padding
-	 可以同时为一列指定多个设备的类名，以便划分不同份数  例如 class="col-md-4 col-sm-6"

	2我们列嵌套最好加一个行，这样可以取消父元素的padding值取消，
	栅格系统内置的栅格系统将内容再次嵌套。简单理解就是一个列内再分成若干份小列。我们可以通过添加一个新的 .row 元素和一系列 .col-sm-* 元素到已经存在的 .col-sm-*

	元素内。
列偏移
	1使用 .col-md-offset-* 类可以将列向右侧偏移
	偏移的分数就是12-两个盒子的分数 ，
	如果只有一个盒子，偏移分数就是12-这个盒子分数除2，
案例分析：
	我们先布局md以上的需求写页面，
